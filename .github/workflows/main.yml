name: CI with Minikube in GitHub Actions

on:
  push:
    branches:
      - master # Or main
  pull_request:
    branches:
      - master # Or main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker BuildX
      uses: docker/setup-buildx-action@v3

    - name: Start Minikube
      uses: medyagh/setup-minikube@latest # This action sets up Minikube on the runner VM
      with:
        minikube-version: 'latest' # Or a specific version like 'v1.32.0'

    - name: Configure Docker to use Minikube's Docker daemon
      run: |
        eval $(minikube docker-env) # This command sets environment variables for Docker to use Minikube's daemon

    - name: Build Docker image inside Minikube's Docker daemon
      run: |
        docker build -t my-app:latest . # Builds image directly into Minikube's image cache

    - name: Deploy to Minikube
      run: |
        kubectl apply -f k8s/deployment.yaml # Your Kubernetes deployment manifest
        kubectl apply -f k8s/service.yaml # Your Kubernetes service manifest
        kubectl wait --for=condition=ready pod -l app=my-app --timeout=300s # Wait for pods to be ready

    - name: Test Minikube Service Access (Internal to Runner)
      run: |
        # Get the NodePort URL for your service from the temporary Minikube
        # Replace 'my-app-service' with the actual name of your Kubernetes service
        SERVICE_URL=$(minikube service my-app-service --url)
        echo "Service URL in Minikube: $SERVICE_URL"
        
        # Curl the service to ensure it's reachable and responding
        curl --fail --show-error $SERVICE_URL